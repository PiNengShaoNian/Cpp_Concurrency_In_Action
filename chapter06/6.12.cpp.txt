// 代码清单6.12　取得threadsafe_lookup_table的内容，并保存为std::map<>
std::map<Key, Value> threadsafe_loop_table::get_map() const {
  std::vector<std::unique_lock<std::shared_mutex>> locks;
  for (unsigned i = 0; i < buckets.size(); i++) {
    locks.push_back(std::unique_lock<std::shared_mutex>(buckets[i].mutex));
  }
  std::map<Key, Value> res;
  for (unsigned i = 0; i < buckets.size(); i++) {
    for (bucket_iterator it = buckets[i].data.begin();
         it != buckets[i].data.end(); it++) {
      res.insert(*it);
    }
  }
  return res;
}