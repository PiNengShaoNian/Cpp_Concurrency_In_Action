// 清单4.22 使用std::async从多个期望值中收集结果
#include <future>
#include <vector>

std::future<FinalResult> process_data(std::vector<MyData> &vec) {
  size_t const chunk_size = 10;
  std::vector<std::future<ChunkResult>> results;
  for (auto begin = vec.begin(), end = vec.end(); begin != end;) {
    size_t const remaining_size = end - begin;
    size_t const this_chunk_size = std::min(remaining_size, chunk_size);
    results.push_back(
        std::async(process_chunk, begin, begin + this_chunk_size));
    begin += this_chunk_size;
  }

  return std::async([all_results = std::move(results)]() {
    std::vector<ChunkResult> v;
    v.reserve(all_results.size());
    for (auto &f : all_results) {
      v.push_back(f.get());
    }
    return gather_results(v);
  });
}
